wget https://raw.githubusercontent.com/dumonody/ShellScriptTools/master/nginx.sh&&chmod 755 nginx.sh&&./nginx.sh
wget https://raw.githubusercontent.com/dumonody/ShellScriptTools/master/mysql.sh&&chmod 755 mysql.sh&&./mysql.sh
yum -y install git
curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
vi ~/.bash_profile
将输出的三行环境变量配置信息，添加到bash_profile中
source ~/.bash_profile
yum -y install gcc
yum -y install make
yum -y install zlib zlib-devel
yum -y install readline readline-devel readline-static
yum -y install openssl openssl-devel openssl-static
yum -y install sqlite-devel
yum -y install bzip2-devel bzip2-libs
yum install -y python-devel
yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum -y install python36-devel.x86_64
pyenv install 3.6.3
pyenv virtualenv 3.6.3 venv-sspanel
mkdir -p /home/www
cd /home/www
git clone -b master https://github.com/Ehco1996/django-sspanel.git
pyenv local venv-sspanel
cd /home/www/django-sspanel
pyenv local venv-sspanel
wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm
yum -y install mysql57-community-release-el7-10.noarch.rpm
yum -y install mysql-devel
pip3 install mysqlclient
pip install -r requirements.txt
cd django-sspanel
vi simple_setting_product.py
------------------------------------------------------
# DEBUG设置
DEBUG = False

# 域名设置
ALLOWED_HOSTS = [
    'cuckoozone.tk'
]

# mysql 设置
DATABASES = {

    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'sspanel',
        'USER': 'root',
        'PASSWORD': '12345678',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        'OPTIONS': {
            'autocommit': True,
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'charset': 'utf8mb4',
        },
    }
}

# 是否开启邮件功能
USE_SMTP = True
# 邮件服务设置：
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# 是否开启ssl/tls
EMAIL_USE_TLS = False
EMAIL_USE_SSL = False

# 我使用163邮箱作为smtp服务器
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = 'USER'
EMAIL_HOST_PASSWORD = 'PASS'
DEFAULT_FROM_EMAIL = 'Ehco<ADDRESS>'

# SS面板设置：
MB = 1024 * 1024
GB = 1024 * 1024 * 1024
DEFAULT_TRAFFIC = 5 * GB
START_PORT = 1024

# 默认加密混淆协议
DEFAULT_METHOD = 'aes-256-cfb'
DEFAULT_PROTOCOL = 'origin'
DEFAULT_OBFS = 'plain'

# 签到流量设置
MIN_CHECKIN_TRAFFIC = 10 * MB
MAX_CHECKIN_TRAFFIC = 200 * MB

# 是否启用支付宝系统
USE_ALIPAY = True
# 支付订单提示信息 修改请保留 {} 用于动态生成金额
ALIPAY_TRADE_INFO = '谜之屋的{}元充值码'

# 是否开启91pay 第三方接口
# 91PAY 、ALIPAY只能开启一项
# 需要授权请联系：
# https://t.me/gh012363  或者QQ群538609570
USE_91PAY = False
ID_91PAY = '123'
USER_91PAY = 'ehco'

# 网站title
TITLE = '布谷屋'
SUBTITLE = '布谷的小屋'

# 用户邀请返利比例
INVITE_PERCENT = 0.2
# 用户能生成的邀请码数量
INVITE_NUM = 5

# 网站邀请界面提示语
INVITEINFO = '邀请码实时更新，如果用完了进telegram群 群链接：https://t.me/Ehcobreakwa11'

# 网站域名设置（请正确填写，不然订阅功能会失效：
HOST = 'https://www.cuckoozone.tk/'


import base64
# 管理员账号
USERNAME = 'ehco'
# 管理员ss端口
PORT = 1025
# 管理员私有token，用于后端接口调用
TOKEN = base64.b64encode(
    bytes('{}+{}'.format(USERNAME, PORT), 'utf8')).decode()
------------------------------------------------------
mysql -uroot -p12345678
create database sspanel;
exit;

cd ..
python manage.py migrate
python manage.py runserver


#	编写Nginx 和 uwsgi 配置
vi nginx_vhost.conf
======================================================
server
    {
        listen 80;
        server_name cuckoozone.tk;
        root  /home/www/django-sspanel;
        #添加如下内容即可防止爬虫
        if ($http_user_agent ~* "qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot")
        {
        return 403;
        }

        location /media  {
        alias /home/www/django-sspanel/media;  # your Django project's media files - amend as required
        }

        location /static
        {
        alias  /home/www/django-sspanel/static; #静态文件地址，js/css
        expires  12h;
        }

        location /
        {
        include uwsgi_params;
        uwsgi_pass 127.0.0.1:8080;
        }

    }
======================================================
cp nginx_vhost.conf /usr/local/nginx/conf/vhost/django-sspanel.conf 

#修改nginx.conf
``````````````````````````````````````````````````````

#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
``````````````````````````````````````````````````````

#配置uwsgi.ini
vi uwsgi.ini
------------------------------------------------------

[uwsgi]

# variables
projectname = django-sspanel
projectdomain = 'cuckoozone.tk'
base = /home/www/django-sspanel

# config
chdir= /home/www/django-sspanel/
plungins = python
socket = 127.0.0.1:8080
module = django-sspanel.wsgi:application
pidfile = /tmp/django-sspanel.pid
master = True
vacuum = True
------------------------------------------------------
python manage.py crontab add
yum install screen
screen -S sspanel
uwsgi uwsgi.ini
screen -r sspanel






lexiAaane
